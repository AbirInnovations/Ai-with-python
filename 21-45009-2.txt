fruits =["apple","banana","cherry"]
x= fruits.count("cherry")
print(x)

cars = ["Ford","Volvo","BMW"]
cars.pop(1)
print(cars)



fruits =["apple","banana","cherry"]
fruits.reverse()
print(fruits)

1.............................................

X = [[12,5,3],
    [4 ,5,7],
    [7 ,8,9]]

Y = [[7,7,7],
    [5,5,5],
    [9,9,9]]

result = [[0,0,0],
         [0,0,0],
         [0,0,0]]

for i in range(len(X)):
   for j in range(len(X[0])):
       result[i][j] = X[i][j] + Y[i][j]

for r in result:
   print(r)

2..........................................................

X = [[1, 2], [3,4], [2, 3]]

result = [[0, 0, 0], [0, 0, 0]]

for i in range (len (X)):

              for j in range (len (X[0])):

                             result [j][i] = X [i][j]

for output in result:

              print (output)
3...................................................................

X = [[3, 2, 3],  
     [3, 3, 6],  
     [3, 7, 9]]    
Y = [[1, 2, 4],  
     [4, 7, 6],  
     [2, 2, 2]]   
multiResult = [[0, 0, 0],    
               [0, 0, 0],    
               [0, 0, 0]]    
for m in range(len(X)):    
   for n in range(len(Y[0])):    
          for o in range(len(Y)):    
               multiResult[m][n] += X[m][o] * Y[o][n]  
print("The multiplication result of matrix X and Y is: ")  
for res in multiResult:    
   print(res)  

4......................................................................................
def linearSearch(array, x, y):

    for i in range(0, x):
        if (array[i] == y):
            return i
    return -1


array = [1, 2, 3, 4, 5]
y = 4
x = len(array)
result = linearSearch(array, x, y)
if(result == -1):
    print("Element not found")
else:
    print("Element found at index: ", result)

5.................................................................................................

def binarySearch(array, search, low, high):

    while low <= high:

        mid = low + (high - low)//2

        if array[mid] == search:
            return mid

        elif array[mid] < search:
            low = mid + 1

        else:
            high = mid - 1

    return -1


array = [3, 1, 2, 6, 8, 7, 0]
search = 2

result = binarySearch(array, search, 0, len(array)-1)

if result != -1:
    print("The index number is " + str(result))
else:
    print("Not found")
